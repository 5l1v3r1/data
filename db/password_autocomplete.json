{
    "severity": "low", 
    "name": "Password field with auto-complete", 
    "remedy_guidance": "\nThe `autocomplete` value can be configured in two different locations.\n\nThe first and most secure location is to disable the `autocomplete` attribute on\nthe `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form.\nAn example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.\n\nThe second slightly less desirable option is to disable the `autocomplete` attribute\nfor a specific `<input>` HTML tag.\nWhile this may be the less desired solution from a security perspective, it may\nbe preferred method for usability reasons, depending on size of the form.\nAn example of disabling the `autocomplete` attribute within a password input tag\nis `<input type=password autocomplete=off>`.\n", 
    "description": "\nIn typical form-based web applications, it is common practice for developers to\nallow `autocomplete` within the HTML form to improve the usability of the page.\nWith `autocomplete` enabled (default), the browser is allowed to cache previously\nentered form values.\n\nFor legitimate purposes, this allows the user to quickly re-enter the same data\nwhen completing the form multiple times.\n\nWhen `autocomplete` is enabled on either/both the username and password fields,\nthis could allow a cyber-criminal with access to the victim's computer the ability\nto have the victim's credentials automatically entered as the cyber-criminal\nvisits the affected page.\n\nArachni has discovered that the affected page contains a form containing a\npassword field that has not disabled `autocomplete`.\n"
}