{"name":"Operating system command injection","description":"\nTo perform specific actions from within a web application, it is occasionally\nrequired to run Operating System commands and have the output of these commands\ncaptured by the web application and returned to the client.\n\nOS command injection occurs when user supplied input is inserted into one of these\ncommands without proper sanitisation and is then executed by the server.\n\nCyber-criminals will abuse this weakness to perform their own arbitrary commands\non the server. This can include everything from simple `ping` commands to map the\ninternal network, to obtaining full control of the server.\n\nArachni was able to inject specific Operating System commands and have the output\nfrom that command contained within the server response. This indicates that proper\ninput sanitisation is not occurring.\n","references":{"OWASP":"https://www.owasp.org/index.php/OS_Command_Injection","WASC":"http://projects.webappsec.org/w/page/13246950/OS%20Commanding"},"tags":["os","command","code","injection","regexp","error"],"cwe":78,"severity":"high","remedy_guidance":"\nIt is recommended that untrusted data is never used to form a command to be\nexecuted by the OS.\n\nTo validate data, the application should ensure that the supplied value contains\nonly the characters that are required to perform the required action.\n\nFor example, where the form field expects an IP address, only numbers and periods\nshould be accepted. Additionally, all control operators (`&`, `&&`, `|`, `||`,\n`$`, `\\`, `#`) should be explicitly denied and never accepted as valid input by\nthe server.\n"}