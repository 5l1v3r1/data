{
    "severity": "high", 
    "tags": [
        "htaccess", 
        "server", 
        "limit"
    ], 
    "description": "\nThere are a number of HTTP methods that can be used on a webserver (for example\n`OPTIONS`, `HEAD`, `GET`, `POST`, `PUT`, `DELETE `etc.).\nEach of these methods perform a different function, and each has an associated\nlevel of risk when their use is permitted on the webserver.\n\nThe `<Limit>` directive within Apache's `.htaccess` file allows administrators\nto define which of the methods they would like to block. However, as this is a\nblacklisting approach, it is inevitable that a server administrator may\naccidentally miss adding certain HTTP methods to be blocked, thus increasing\nthe level of risk to the application and/or server.\n", 
    "references": {
        "Apache.org": "http://httpd.apache.org/docs/2.2/mod/core.html#limit"
    }, 
    "remedy_guidance": "\nThe preferred configuration is to prevent the use of unauthorised HTTP methods\nby utilising the `<LimitExcept>` directive.\n\nThis directive uses a whitelisting approach to permit HTTP methods while\nblocking all others not listed in the directive, and will therefor block any\nmethod tampering attempts.\n\nMost commonly, the only HTTP methods required for most scenarios are `GET` and\n`POST`. An example of permitting these HTTP methods is:\n `<LimitExcept POST GET> require valid-user </LimitExcept>`\n", 
    "name": "Misconfiguration in LIMIT directive of .htaccess file"
}