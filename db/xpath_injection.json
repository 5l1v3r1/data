{"name":"XPath Injection","description":"\nXML Path Language (XPath) queries are used by web applications for selecting\nnodes from XML documents.\nOnce selected, the value of these nodes can then be used by the application.\n\nA simple example for the use of XML documents is to store user information. As\npart of the authentication process, the application will perform an XPath query\nto confirm the login credentials and retrieve that user's information to use in\nthe following request.\n\nXPath injection occurs where untrusted data is used to build XPath queries.\n\nCyber-criminals may abuse this injection vulnerability to bypass authentication,\nquery other user's information, or, if the XML document contains privileged user\ncredentials, allow the cyber-criminal to escalate their privileges.\n\nArachni injected special XPath query characters into the page and based on the\nresponses from the server, has determined that the page is vulnerable to XPath injection.\n","references":{"OWASP":"https://www.owasp.org/index.php/XPATH_Injection","WASC":"http://projects.webappsec.org/w/page/13247005/XPath%20Injection"},"tags":["xpath","database","error","injection","regexp"],"cwe":91,"severity":"high","remedy_guidance":"\nThe preferred way to protect against XPath injection is to utilise parameterized\n(also known as prepared) XPath queries.\nWhen utilising this method of querying the XML document any value supplied by the\nclient will be handled as a string rather than part of the XPath query.\n\nAn alternative to parameterized queries it to use precompiled XPath queries.\nPrecompiled XPath queries are not generated dynamically and will therefor never\nprocess user supplied input as XPath.\n"}